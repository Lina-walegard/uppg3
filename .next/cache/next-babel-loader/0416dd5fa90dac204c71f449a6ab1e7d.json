{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Asus/source/react/course/labb3/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Asus/source/react/course/labb3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\source\\\\react\\\\course\\\\labb3\\\\Components\\\\FetchData.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\n\nvar FetchData = function FetchData(props) {\n  _s();\n\n  var _useState = useState({\n    urlMetal: \"https://metals-api.com/api/latest?access_key=qba30a3bp2c9dl6oupq250f11my19te3u5fkbd6jk807o831mnb1g1o5jaiz&base=EUR&symbols=XAG\",\n    urlSek: \"https://api.exchangeratesapi.io/latest?base=EUR\"\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  function metalReducer(state, action) {\n    switch (action.type) {\n      case \"setMetal\":\n        {\n          return action.data;\n        }\n\n      default:\n        return state;\n    }\n  }\n\n  var _useReducer = useReducer(metalReducer, 0),\n      metal = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var _useState2 = useState(0),\n      sek = _useState2[0],\n      setSek = _useState2[1];\n\n  useEffect(function () {\n    function getMetalPrice() {\n      return _getMetalPrice.apply(this, arguments);\n    }\n\n    function _getMetalPrice() {\n      _getMetalPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: \"setMetal\",\n                  data: 20\n                });\n                /*  const response = await fetch(data.urlMetal);\r\n                  if (response.ok) {\r\n                  var dataRes = await response.json();\r\n                  dispatch({\r\n                    type: \"setMetal\",\r\n                    data: dataRes.rates.XAG,\r\n                  });\r\n                } */\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getMetalPrice.apply(this, arguments);\n    }\n\n    function getSek() {\n      return _getSek.apply(this, arguments);\n    }\n\n    function _getSek() {\n      _getSek = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var responseSEK, dataResSEK;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(data.urlSek);\n\n              case 2:\n                responseSEK = _context2.sent;\n\n                if (!responseSEK.ok) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 6;\n                return responseSEK.json();\n\n              case 6:\n                dataResSEK = _context2.sent;\n                setSek(dataResSEK.rates.SEK);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getSek.apply(this, arguments);\n    }\n\n    function fetchdata() {\n      return _fetchdata.apply(this, arguments);\n    }\n\n    function _fetchdata() {\n      _fetchdata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return getMetalPrice();\n\n              case 2:\n                _context3.next = 4;\n                return getSek();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _fetchdata.apply(this, arguments);\n    }\n\n    fetchdata();\n  }, [data.urlMetal, data.urlSek]);\n  useEffect(function () {\n    if (metal !== 0 && sek !== 0) {\n      props.functionCallFromParent(metal, sek);\n    }\n  }, [metal, sek, props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(FetchData, \"L2wN+N3dGBXnUfJy/h7u37b0inA=\");\n\n_c = FetchData;\nexport default FetchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchData\");","map":{"version":3,"sources":["C:/Users/Asus/source/react/course/labb3/Components/FetchData.jsx"],"names":["React","useState","useEffect","useReducer","FetchData","props","urlMetal","urlSek","data","setData","metalReducer","state","action","type","metal","dispatch","sek","setSek","getMetalPrice","getSek","fetch","responseSEK","ok","json","dataResSEK","rates","SEK","fetchdata","functionCallFromParent"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACHJ,QAAQ,CAAC;AAC/BK,IAAAA,QAAQ,EACN,gIAF6B;AAG/BC,IAAAA,MAAM,EAAE;AAHuB,GAAD,CADL;AAAA,MACpBC,IADoB;AAAA,MACdC,OADc;;AAO3B,WAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,UAAL;AAAiB;AACf,iBAAOD,MAAM,CAACJ,IAAd;AACD;;AACD;AACE,eAAOG,KAAP;AALJ;AAOD;;AAf0B,oBAiBDR,UAAU,CAACO,YAAD,EAAe,CAAf,CAjBT;AAAA,MAiBpBI,KAjBoB;AAAA,MAiBbC,QAjBa;;AAAA,mBAkBLd,QAAQ,CAAC,CAAD,CAlBH;AAAA,MAkBpBe,GAlBoB;AAAA,MAkBfC,MAlBe;;AAoB3Bf,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCgB,aADD;AAAA;AAAA;;AAAA;AAAA,gFACd;AAAA;AAAA;AAAA;AAAA;AACEH,gBAAAA,QAAQ,CAAC;AACPF,kBAAAA,IAAI,EAAE,UADC;AAEPL,kBAAAA,IAAI,EAAE;AAFC,iBAAD,CAAR;AAKA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAbI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAAA,aAkBCW,MAlBD;AAAA;AAAA;;AAAA;AAAA,yEAkBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC4BC,KAAK,CAACZ,IAAI,CAACD,MAAN,CADjC;;AAAA;AACQc,gBAAAA,WADR;;AAAA,qBAGMA,WAAW,CAACC,EAHlB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAI2BD,WAAW,CAACE,IAAZ,EAJ3B;;AAAA;AAIQC,gBAAAA,UAJR;AAKIP,gBAAAA,MAAM,CAACO,UAAU,CAACC,KAAX,CAAiBC,GAAlB,CAAN;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAlBc;AAAA;AAAA;;AAAA,aA2BCC,SA3BD;AAAA;AAAA;;AAAA;AAAA,4EA2Bd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQT,aAAa,EADrB;;AAAA;AAAA;AAAA,uBAEQC,MAAM,EAFd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA3Bc;AAAA;AAAA;;AAgCdQ,IAAAA,SAAS;AACV,GAjCQ,EAiCN,CAACnB,IAAI,CAACF,QAAN,EAAgBE,IAAI,CAACD,MAArB,CAjCM,CAAT;AAmCAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIY,KAAK,KAAK,CAAV,IAAeE,GAAG,KAAK,CAA3B,EAA8B;AAC5BX,MAAAA,KAAK,CAACuB,sBAAN,CAA6Bd,KAA7B,EAAoCE,GAApC;AACD;AACF,GAJQ,EAIN,CAACF,KAAD,EAAQE,GAAR,EAAaX,KAAb,CAJM,CAAT;AAMA,sBAAO;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CA9DD;;GAAMD,S;;KAAAA,S;AAgEN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\r\n\r\nconst FetchData = (props) => {\r\n  const [data, setData] = useState({\r\n    urlMetal:\r\n      \"https://metals-api.com/api/latest?access_key=qba30a3bp2c9dl6oupq250f11my19te3u5fkbd6jk807o831mnb1g1o5jaiz&base=EUR&symbols=XAG\",\r\n    urlSek: \"https://api.exchangeratesapi.io/latest?base=EUR\",\r\n  });\r\n\r\n  function metalReducer(state, action) {\r\n    switch (action.type) {\r\n      case \"setMetal\": {\r\n        return action.data;\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  const [metal, dispatch] = useReducer(metalReducer, 0);\r\n  const [sek, setSek] = useState(0);\r\n\r\n  useEffect(() => {\r\n    async function getMetalPrice() {\r\n      dispatch({\r\n        type: \"setMetal\",\r\n        data: 20,\r\n      });\r\n\r\n      /*  const response = await fetch(data.urlMetal);\r\n\r\n      if (response.ok) {\r\n        var dataRes = await response.json();\r\n        dispatch({\r\n          type: \"setMetal\",\r\n          data: dataRes.rates.XAG,\r\n        });\r\n      } */\r\n    }\r\n\r\n    async function getSek() {\r\n      const responseSEK = await fetch(data.urlSek);\r\n\r\n      if (responseSEK.ok) {\r\n        var dataResSEK = await responseSEK.json();\r\n        setSek(dataResSEK.rates.SEK);\r\n      }\r\n    }\r\n\r\n    async function fetchdata() {\r\n      await getMetalPrice();\r\n      await getSek();\r\n    }\r\n\r\n    fetchdata();\r\n  }, [data.urlMetal, data.urlSek]);\r\n\r\n  useEffect(() => {\r\n    if (metal !== 0 && sek !== 0) {\r\n      props.functionCallFromParent(metal, sek);\r\n    }\r\n  }, [metal, sek, props]);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default FetchData;\r\n"]},"metadata":{},"sourceType":"module"}