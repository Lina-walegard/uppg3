{"ast":null,"code":"import React, { useState } from \"react\";\nexport function getData() {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    urlMetal: \"https://metals-api.com/api/latest?access_key=qba30a3bp2c9dl6oupq250f11my19te3u5fkbd6jk807o831mnb1g1o5jaiz&base=EUR&symbols=XAG\",\n    urlSek: \"https://api.exchangeratesapi.io/latest?base=EUR\",\n    metal: 0,\n    sek: 0\n  });\n  /* \r\n    const response = await fetch(urlMetal);\r\n      if (response.ok) {\r\n     \r\n        var dataRes = await response.json();   \r\n        data.metal.setData(dataRes.rates.XAG);\r\n    }\r\n      const responseSEK = await fetch(data.urlSek);\r\n        if (responseSEK.ok) {\r\n        var dataResSEK = await responseSEK.json();\r\n        data.sek.setData(dataResSEK.rates.SEK);\r\n      } */\n\n  data.metal.setData(20);\n  data.sek.setData(15);\n  return data;\n}","map":{"version":3,"sources":["C:/Users/Asus/source/react/course/labb3/components/data.js"],"names":["React","useState","getData","data","setData","urlMetal","urlSek","metal","sek"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBH,QAAQ,CAAC;AAC/BI,IAAAA,QAAQ,EACN,gIAF6B;AAG/BC,IAAAA,MAAM,EAAE,iDAHuB;AAI/BC,IAAAA,KAAK,EAAE,CAJwB;AAK/BC,IAAAA,GAAG,EAAE;AAL0B,GAAD,CAAhC;AAQA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKEL,EAAAA,IAAI,CAACI,KAAL,CAAWH,OAAX,CAAmB,EAAnB;AACAD,EAAAA,IAAI,CAACK,GAAL,CAASJ,OAAT,CAAiB,EAAjB;AACA,SAAOD,IAAP;AACD","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport function getData() {\r\n  const [data, setData] = useState({\r\n    urlMetal:\r\n      \"https://metals-api.com/api/latest?access_key=qba30a3bp2c9dl6oupq250f11my19te3u5fkbd6jk807o831mnb1g1o5jaiz&base=EUR&symbols=XAG\",\r\n    urlSek: \"https://api.exchangeratesapi.io/latest?base=EUR\",\r\n    metal: 0,\r\n    sek: 0,\r\n  });\r\n\r\n  /* \r\n    const response = await fetch(urlMetal);\r\n\r\n    if (response.ok) {\r\n     \r\n        var dataRes = await response.json();   \r\n        data.metal.setData(dataRes.rates.XAG);\r\n    }\r\n\r\n    const responseSEK = await fetch(data.urlSek);\r\n\r\n      if (responseSEK.ok) {\r\n        var dataResSEK = await responseSEK.json();\r\n        data.sek.setData(dataResSEK.rates.SEK);\r\n      } */\r\n\r\n  data.metal.setData(20);\r\n  data.sek.setData(15);\r\n  return data;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}